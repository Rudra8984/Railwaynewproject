/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gui;
import static Gui.UserInterface.user;
import Railreservation.Trainreservation;
import Traininformation.Ticket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author irudr
 */
public class ShowticketUserInterface extends javax.swing.JFrame {
    private List<Ticket> ticketList;
    private UserInterface userInterface=UserInterface.getInstance();
    public Trainreservation.User user=UserInterface.user;
    /**
     * Creates new form ShowticketInterface
     */
    public ShowticketUserInterface() {
        initComponents();
        this.userInterface = new UserInterface();
        List<Ticket> initialTickets = new ArrayList<>();
        fetchTicketList(initialTickets);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TicketTable = new javax.swing.JTable();
        BacktoUser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Removeticket = new javax.swing.JButton();
        Rmticketno = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TicketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Ticketno", "Trainno", "Trainname", "Seatno", "sourseStation", "destitionStation", "departuretime"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TicketTable);

        BacktoUser.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        BacktoUser.setText("Back");
        BacktoUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BacktoUserActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setText("Bhubaneswar Metro");

        Removeticket.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Removeticket.setText("Remove ticket");
        Removeticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveticketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Rmticketno, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(Removeticket, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(BacktoUser, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Removeticket)
                    .addComponent(BacktoUser)
                    .addComponent(Rmticketno, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void BacktoUserActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        userInterface.setTempUsername(user.name);
        userInterface.setVisible(true);
        this.dispose();
    }                                          

    private void RemoveticketActionPerformed(java.awt.event.ActionEvent evt) {                                             
            // TODO add your handling code here:
        int ticketNoToRemove = Integer.parseInt(Rmticketno.getText());
        Ticket ticketToRemove = null;
        for (Ticket ticket : user.tickets) {
            if (ticket.Ticketno == ticketNoToRemove) {
                ticketToRemove = ticket;
                break;
            }
        }
        if (ticketToRemove != null) {
            user.tickets.remove(ticketToRemove);
            updateTable();
            this.dispose();
            ShowticketUserInterface showticket=new ShowticketUserInterface();
            showticket.fetchTicketList(user.tickets);
            showticket.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Ticket with Ticket No. " + ticketNoToRemove + " not found.");
        }
    }                                            
    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) TicketTable.getModel();

        // Clear the existing rows only if needed
        // model.setRowCount(0); 

        // Populate the table with the updated ticket list
        populateTable(user.tickets);
   }
    /**
     * @param args the command line arguments
     */
    public void fetchTicketList(List<Ticket> tickets) {
        this.ticketList =tickets;
        populateTable(ticketList);
    }
    private void populateTable(List<Ticket> ticketList) {
        DefaultTableModel model = (DefaultTableModel) TicketTable.getModel();
        for (Ticket ticket : ticketList) {
            Object[] rowData = {
                ticket.Ticketno,
                ticket.trainInfo.trainnumber,
                ticket.trainInfo.trainname,
                ticket.Seatno,
                ticket.from,
                ticket.to,
                ticket.departuretime
            };
            model.addRow(rowData);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowticketUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowticketUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowticketUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowticketUserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowticketUserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton BacktoUser;
    private javax.swing.JButton Removeticket;
    private javax.swing.JTextField Rmticketno;
    private javax.swing.JTable TicketTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   

}
